// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebServerFinalProject.Data;

#nullable disable

namespace WebServerFinalProject.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20251028200011_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebServerFinalProject.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            Name = "Spring"
                        },
                        new
                        {
                            CategoryId = 2,
                            Name = "Fall"
                        },
                        new
                        {
                            CategoryId = 3,
                            Name = "Holiday"
                        });
                });

            modelBuilder.Entity("WebServerFinalProject.Models.Ingredient", b =>
                {
                    b.Property<int>("IngredientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IngredientId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IngredientId");

                    b.ToTable("Ingredients");

                    b.HasData(
                        new
                        {
                            IngredientId = 1,
                            Name = "Flour"
                        },
                        new
                        {
                            IngredientId = 2,
                            Name = "Sugar"
                        },
                        new
                        {
                            IngredientId = 3,
                            Name = "Eggs"
                        },
                        new
                        {
                            IngredientId = 4,
                            Name = "Butter"
                        },
                        new
                        {
                            IngredientId = 5,
                            Name = "Vanilla Extract"
                        },
                        new
                        {
                            IngredientId = 6,
                            Name = "Baking Powder"
                        },
                        new
                        {
                            IngredientId = 7,
                            Name = "Cinnamon"
                        });
                });

            modelBuilder.Entity("WebServerFinalProject.Models.Recipe", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("BakeMinutes")
                        .HasColumnType("int");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Difficulty")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PrepMinutes")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CategoryId");

                    b.ToTable("Recipes");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            BakeMinutes = 30,
                            CategoryId = 3,
                            Description = "A rich and moist chocolate cake.",
                            Difficulty = "Medium",
                            PrepMinutes = 15,
                            Title = "Chocolate Cake",
                            Type = "Dessert"
                        },
                        new
                        {
                            ID = 2,
                            BakeMinutes = 40,
                            CategoryId = 2,
                            Description = "Classic American apple pie.",
                            Difficulty = "Medium",
                            PrepMinutes = 20,
                            Title = "Apple Pie",
                            Type = "Dessert"
                        },
                        new
                        {
                            ID = 3,
                            BakeMinutes = 25,
                            CategoryId = 1,
                            Description = "A hearty fall favorite.",
                            Difficulty = "Easy",
                            PrepMinutes = 10,
                            Title = "Pumpkin Soup",
                            Type = "Soup"
                        });
                });

            modelBuilder.Entity("WebServerFinalProject.Models.RecipeIngredient", b =>
                {
                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.Property<int>("IngredientId")
                        .HasColumnType("int");

                    b.Property<double>("Quantity")
                        .HasColumnType("float");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RecipeId", "IngredientId");

                    b.HasIndex("IngredientId");

                    b.ToTable("RecipeIngredients");

                    b.HasData(
                        new
                        {
                            RecipeId = 1,
                            IngredientId = 1,
                            Quantity = 2.0,
                            Unit = "cups"
                        },
                        new
                        {
                            RecipeId = 1,
                            IngredientId = 2,
                            Quantity = 1.5,
                            Unit = "cups"
                        },
                        new
                        {
                            RecipeId = 1,
                            IngredientId = 3,
                            Quantity = 3.0,
                            Unit = "eggs"
                        },
                        new
                        {
                            RecipeId = 1,
                            IngredientId = 4,
                            Quantity = 0.5,
                            Unit = "cups"
                        },
                        new
                        {
                            RecipeId = 2,
                            IngredientId = 1,
                            Quantity = 3.0,
                            Unit = "cups"
                        },
                        new
                        {
                            RecipeId = 2,
                            IngredientId = 2,
                            Quantity = 1.0,
                            Unit = "cup"
                        },
                        new
                        {
                            RecipeId = 2,
                            IngredientId = 3,
                            Quantity = 2.0,
                            Unit = "eggs"
                        },
                        new
                        {
                            RecipeId = 2,
                            IngredientId = 4,
                            Quantity = 0.75,
                            Unit = "cups"
                        },
                        new
                        {
                            RecipeId = 3,
                            IngredientId = 1,
                            Quantity = 1.0,
                            Unit = "cup"
                        },
                        new
                        {
                            RecipeId = 3,
                            IngredientId = 2,
                            Quantity = 0.5,
                            Unit = "cup"
                        },
                        new
                        {
                            RecipeId = 3,
                            IngredientId = 3,
                            Quantity = 1.0,
                            Unit = "cup"
                        },
                        new
                        {
                            RecipeId = 3,
                            IngredientId = 7,
                            Quantity = 1.0,
                            Unit = "tsp"
                        });
                });

            modelBuilder.Entity("WebServerFinalProject.Models.Recipe", b =>
                {
                    b.HasOne("WebServerFinalProject.Models.Category", "Category")
                        .WithMany("Recipes")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Category");
                });

            modelBuilder.Entity("WebServerFinalProject.Models.RecipeIngredient", b =>
                {
                    b.HasOne("WebServerFinalProject.Models.Ingredient", "Ingredient")
                        .WithMany("RecipeIngredients")
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebServerFinalProject.Models.Recipe", "Recipe")
                        .WithMany("RecipeIngredients")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ingredient");

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("WebServerFinalProject.Models.Category", b =>
                {
                    b.Navigation("Recipes");
                });

            modelBuilder.Entity("WebServerFinalProject.Models.Ingredient", b =>
                {
                    b.Navigation("RecipeIngredients");
                });

            modelBuilder.Entity("WebServerFinalProject.Models.Recipe", b =>
                {
                    b.Navigation("RecipeIngredients");
                });
#pragma warning restore 612, 618
        }
    }
}
